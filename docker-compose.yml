services:
  # ===========================
  # Zookeeper (requerido por Kafka)
  # ===========================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # ===========================
  # Kafka Broker
  # ===========================
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # ===========================
  # Debezium Kafka Connect
  # ===========================
  connect:
    image: debezium/connect:2.7.1.Final
    container_name: connect
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    depends_on:
      - kafka

  # ===========================
  # Redis
  # ===========================
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"

  # ===========================
  # API (FastAPI)
  # ===========================
  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: api
    ports:
      - "8000:8000"
    volumes:
      - ./shared:/app/shared  # Compartimos m贸dulo shared
    depends_on:
      - kafka
      - redis

  # ===========================
  # Dashboard (Streamlit)
  # ===========================
  dashboard:
    build:
      context: .
      dockerfile: dashboard/Dockerfile
    container_name: dashboard
    ports:
      - "8501:8501"
    depends_on:
      - api

  # ===========================
  # Riot Fetcher
  # ===========================
  riot_fetcher:
    build:
      context: .
      dockerfile: riot_fetcher/Dockerfile
    container_name: riot_fetcher
    volumes:
      - ./shared:/app/shared  # Compartimos m贸dulo shared
    depends_on:
      - kafka
    env_file:
      - .env
    entrypoint: ["/wait-for-kafka.sh", "python", "riot_fetcher/fetcher.py"]

  # ===========================
  # Ingesti贸n
  # ===========================
  ingestion:
    build:
      context: .
      dockerfile: src/ingestion/Dockerfile
    container_name: ingestion
    volumes:
      - ./shared:/app/shared  # Compartimos m贸dulo shared
    depends_on:
      - kafka
      - redis
