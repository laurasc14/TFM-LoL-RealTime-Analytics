version: "3.8"

networks:
  tfm-net:
    driver: bridge

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - tfm-net

  kafka:
    image: bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - tfm-net
    volumes:
      - ./init-topics.sh:/docker-entrypoint-init.d/init-topics.sh

  mongo:
    image: mongo:6.0
    container_name: final-mongo
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    networks:
      - tfm-net

  api:
    build:
      context: .
      dockerfile: app/api/Dockerfile
    container_name: final-api
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - mongo
    networks:
      - tfm-net

  riot_fetcher:
    build:
      context: .
      dockerfile: app/riot_fetcher/Dockerfile
    container_name: final-riot-fetcher
    depends_on:
      - kafka
      - mongo
    networks:
      - tfm-net

  ingestion:
    build:
      context: .
      dockerfile: app/ingestion/Dockerfile
    container_name: final-ingestion
    depends_on:
      - kafka
      - mongo
    networks:
      - tfm-net

  dashboard:
    build:
      context: .
      dockerfile: app/dashboard/Dockerfile
    container_name: final-dashboard
    ports:
      - "8501:8501"
    depends_on:
      - mongo
    networks:
      - tfm-net
